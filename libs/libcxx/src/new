#ifndef _STD_NEW_HPP
#define _STD_NEW_HPP

#include <cstddef>

namespace std {
    enum class align_val_t : size_t {};
};

[[nodiscard]] void* operator new(std::size_t count);
[[nodiscard]] void* operator new(std::size_t count, void* ptr) noexcept;
[[nodiscard]] void* operator new[](std::size_t count, void* ptr) noexcept;
[[nodiscard]] void* operator new[](std::size_t count);
[[nodiscard]] void* operator new(std::size_t count, std::align_val_t al);
[[nodiscard]] void* operator new[](std::size_t count, std::align_val_t al);

void operator delete(void* ptr) noexcept;
void operator delete(void* ptr, std::size_t size, std::align_val_t al) noexcept;

#endif // _STD_NEW_HPP
