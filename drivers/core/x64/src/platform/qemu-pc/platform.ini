# This cross file MUST be included AFTER cross_base.ini when passed to meson; for example:
#    meson ./build/qemu-pc/ --cross-file ./cross_base.ini --cross-file ./drivers/core/x64/src/platform/qemu-pc.ini

# The host machine, in meson terminology, is the machine that the compiled binary will run on. This will be different
# for each CPU architecture that a binary is compiled for; in this case, it's Intel x64, also known as x86_64/AMD64.
[host_machine]
system     = 'system'
cpu_family = 'x86_64'
cpu        = 'x86_64'
endian     = 'little'

[built-in options]
cpp_args = base_cpp_args + [
    # Specify the PLATFORM macro to be "qemu-pc" so the correct platform header is included.
    '-DPLATFORM=qemu-pc',
    # Compile for the x84_64 architecture. Indicate Linux to work around bug in Meson where it believes ld.lld is an
    # Apple linker and passes "-dead_strip_dylibs" as a linker arg, which ld.lld on Linux doesn't have.
    '-target', 'x86_64-linux-elf64']

cpp_link_args = base_cpp_link_args + [
    # Link and generate an ELF64 for the x86_64 architecture. Indicate Linux to work around bug in Meson where it
    # believes ld.lld is an Apple linker and passes "-dead_strip_dylibs" as a linker arg, which ld.lld on Linux
    # doesn't have.
    '--target=x86_64-linux-elf64']