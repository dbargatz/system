[binaries]
ar     = '/usr/bin/ar'
cpp    = '/usr/bin/clang++'
cpp_ld = '/usr/bin/ld'
strip  = '/usr/bin/strip'

[host_machine]
system     = 'system'
cpu_family = 'x86_64'
cpu        = ''
endian     = 'little'

[properties]
# TODO: flto
cpp_args = [
    '-g', # Generate source-level debug information.
    '--target=x86_64-pc-none-elf',
    '-isystem', '../src/std',
    '-march=x86-64', # Generate instructions for a generic x64 processor.
    '-mcmodel=small', # Assume that all code/data in the compiled binary fit within 2GB. This allows us to use 32-bit offsets for RIP-relative addressing, which requires fewer/faster instructions. See https://eli.thegreenplace.net/2012/01/03/understanding-the-x64-code-models.
    '-fchar8_t', # Enable the C++20 char8_t type.
    '-ffreestanding', # Build for a freestanding (not hosted) environment so the binary can run on bare metal with little-to-no standard library or OS support. See https://gcc.gnu.org/onlinedocs/gcc/Standards.html, search for "freestanding".
    '-fno-builtin', # Disable implicit builtin knowledge of functions.
    '-fno-exceptions', # Disable C++ exception support.
    '-fno-rtti', # Disable generation of RunTime Type Information (RTTI) data.
    '-fno-threadsafe-statics', # Don't emit code to make initialization of local statics thread-safe (__cxa_guard_XXX functions).
    '-fpic', # Generate position-independent code.
    '-nodefaultlibs', # Disable linking against all default libraries - builtins, math, libgcc, libc, libc++, etc.
    '-nostdinc', # Disable all standard #include directories - C Standard Library, C++ Standard Library, system, etc.
    '-nostdinc++', # Disable all standard #include directories - C Standard Library, C++ Standard Library, system, etc.
    '-std=c++2a', # Conform to the C++20 standard.
    '-Wall', '-Werror'] # Enable all warnings and treat them as errors. Do NOT enable pedantic errors; we use C99 features and GNU C extensions, and pedantic errors flag on those.

cpp_link_args = [
    '-fpic',                # Generate position-independent code.
    '-nodefaultlibs',
    '-nostartfiles',
    '-Wl,--gc-sections',    # Remove unused sections.
    '-Wl,--nmagic']         # Don't page-align data.
