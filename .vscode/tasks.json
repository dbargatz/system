{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Clean",
            "type": "shell",
            "command": "make clean",
            "group": "build"
        },
        {
            "label": "Build (qemu-pc)",
            "type": "shell",
            "group": "build",
            "command": "make clean && make build",
            "options": {
                "env": {
                    "SYSTEM_ARCHITECTURE": "x64",
                    "SYSTEM_NINJA_TARGET": "system.iso",
                    "SYSTEM_PLATFORM": "qemu-pc",
                }
            },
        },
        {
            "label": "Build (raspi3b)",
            "type": "shell",
            "group": "build",
            "command": "make clean && make build",
            "options": {
                "env": {
                    "SYSTEM_ARCHITECTURE": "arm64",
                    "SYSTEM_NINJA_TARGET": "kernel8.img",
                    "SYSTEM_PLATFORM": "raspi3b",
                }
            },
        },
        {
            "label": "Start QEMU (qemu-pc)",
            "type": "shell",
            "command": "/usr/bin/qemu-system-x86_64",
            "args": [
                "-m", "5G",
                "-smp", "3",
                "-serial", "stdio",
                "-d", "int",
                "-D", "~/qemu_x64.log",
                "-no-reboot",
                "-s",
                "-S",
                "-cdrom", "${workspaceFolder}/build/qemu-pc/system.iso",
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "dedicated",
            },
            "isBackground": true,
            "dependsOn": [
                "Build (qemu-pc)",
            ],
            "problemMatcher": {
                "pattern": [
                    {
                      "regexp": ".",
                      "file": 1,
                      "location": 2,
                      "severity": 3,
                      "code": 4,
                      "message": 5
                    }
                ],
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": ".",
                    "endsPattern": "^VNC server running on 127.0.0.1:5900"
                }
            }
        },
        {
            "label": "Start QEMU (raspi3b)",
            "type": "shell",
            "command": "/usr/bin/qemu-system-aarch64",
            "args": [
                "-M", "raspi3b",
                "-serial", "null",  // skip UART0 for now
                "-serial", "stdio", // redirect UART1 (the mini-UART) to stdio
                "-d", "int",
                "-D", "~/qemu_raspi3b.log",
                "-no-reboot",
                "-s",
                "-S",
                "-kernel", "${workspaceFolder}/build/raspi3b/kernel8.img",
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "dedicated",
            },
            "isBackground": true,
            "dependsOn": [
                "Build (raspi3b)",
            ],
            "problemMatcher": {
                "pattern": [
                    {
                      "regexp": ".",
                      "file": 1,
                      "location": 2,
                      "severity": 3,
                      "code": 4,
                      "message": 5
                    }
                ],
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": ".",
                    "endsPattern": "^VNC server running on 127.0.0.1:5900"
                }
            }
        },
        {
            "label": "Kill QEMU",
            "type": "shell",
            "command": "echo ${input:terminate}",
            "problemMatcher": []
        },
    ],
    "inputs": [
        {
          "id": "terminate",
          "type": "command",
          "command": "workbench.action.tasks.terminate",
          "args": "terminateAll"
        }
    ]
  }
